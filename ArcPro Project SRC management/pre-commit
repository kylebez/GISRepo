#!/bin/sh

STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

declare -a APRX_SERVICE_FILES
declare -a MAPX_FILES

# Test if there are any .aprx files in the index
for filepath in $(git diff --cached --name-only --diff-filter=M)
do
	test -z $(echo $filepath | gawk '/aprx$/') || APRX_SERVICE_FILES+=($filepath);
	test -z $(echo $filepath | gawk '/mapx$/') || MAPX_FILES+=($filepath);
done
if [ ${#APRX_SERVICE_FILES[@]} -gt 0 ] && [ -e $(git rev-parse --show-toplevel)/.githooks/export-map.sh ]; then
  for f in ${APRX_SERVICE_FILES[@]}
  do
    echo "Working with file $f"
    sh $(git rev-parse --show-toplevel)/.githooks/export-map.sh $f
    rc=$?
    if [ $rc -eq 9 ]; then
      echo "Removing from commit"
      if ! [ ${#MAPX_FILES[@]} -gt 0 ]; then #only reset aprx if there is no exported file in the commit either
        git reset $f 
      fi
    elif [ $rc -ne 0 ]; then
		  echo 'Error in export'
	  fi
    continue
  done
fi
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM) #check if there is no more files to commit, if so quit
if [ ${#STAGED_FILES[@]} -eq 0 ]; then
  echo "No files left to commit"
  exit 1
fi

if [ ${#STAGED_FILES[@]} -eq 0 ]; then
  exit 0
fi

PASS=true
message="COMMIT FAILED: "

#The following is optional stuff, just checking for dev comments

for FILE in $STAGED_FILES
do
  if (grep -F '#DEV' $FILE) || (grep -F '//DEV' $FILE); then
  PASS=false
  message+=" Looks like there are some DEV comments to clear.\n"
  fi
  if (grep -F 'debugger;' $FILE) || (grep -F 'console.log(' $FILE) || (grep -F 'print(' $FILE); then
  PASS=false
  message+=" Looks like there are some debugger statements to clear.\n"
  fi
done

if ! $PASS; then
  printf message
  exit 1
fi

exit $?
